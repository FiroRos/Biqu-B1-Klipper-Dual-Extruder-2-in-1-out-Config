#klipper config for biqu b1 dual extruder
#biqu b1 stock config from https://github.com/JoeTodes/BIQU-B1-Klipper-Settings
#dual extruder (2 in 1 out) config+macros from: https://klipper.discourse.group/t/x-in-1-out-non-mixing-extruder-config/2387
######################################################
######################################################
[mcu eddy]
serial: /dev/serial/by-id/usb-Klipper_rp2040_45474E621A8A1AFA-if00 # This is the serial address of your eddy probe. This can be found by using the terminal of your klipper instance (typically through SSH) and using the command ```ls /dev/serial/by-id``` 
restart_method: command
#Did you read all of the comments before the macros? Make sure that you do and then uncomment the ones that you need. Remove this line when you are done.

[temperature_sensor btt_eddy_mcu]
sensor_type: temperature_mcu # Sets the type of sensor for Klipper to read
sensor_mcu: eddy # Sets the MCU of the eddy probe tempereature sensor
min_temp: 10 # Sets the minimum tempereature for eddys tempereature sensor to operate
max_temp: 100 # Sets the maximum tempereature for eddys tempereature sensor to operate

[probe_eddy_current btt_eddy]
sensor_type: ldc1612
z_offset: 1.0
#i2c_address:
i2c_mcu: eddy  # This value is good for the Eddy USB but would need to be adjusted for the Eddy Coil according to the MCU you have used.
i2c_bus: i2c0f # This value is good for the Eddy USB but would need to be adjusted for the Eddy Coil according to the I2C bus you have used.
# Measure the offsets below using the method described here: https://www.klipper3d.org/Probe_Calibrate.html#calibrating-probe-x-and-y-offsets
# For a standard Voron stealthburner X carriage mount there should be no need to change the defaults below.
x_offset: 0
y_offset: -32
data_rate: 500

# This section is only relevant for Eddy USB. Comment it out for Eddy Coil.
[temperature_probe btt_eddy]
sensor_type: Generic 3950
sensor_pin: eddy:gpio26
horizontal_move_z: 2

[bed_mesh]
horizontal_move_z: 2
speed: 200
# For the mesh dimensions below, the coordinates need to be reachable by the center of the probe. To calculate coordinates that will work, use the formula below:
# mesh x min = position_min_x + greater_of (15mm or x_offset) <--- in this term, only consider the x offset if it is positive, ignore if negative.
# mesh y min = position_min_y + greater_of (15mm or y_offset) <--- in this term, only consider the y offset if it is positive, ignore if negative.
# mesh x max = position_max_x - greater_of (15mm or |x_offset|) <--- in this term, only consider the x offset if it is negative, ignore if positive.
# mesh y max = position_max_y - greater_of (15mm or |y_offset|) <--- in this term, only consider the y offset if it is negative, ignore if positive.
# Example: Consider that you have a 300 x 300 bed with the max x and y positions being 300 and the min being 0. Your probe offsets are -20 for X and 10 for Y
# For mesh x min we ignore the x offset term because it is negative. Therefore mesh x min = 15
# For mesh y min we do not ignore the y offset term because it is positive but it is less than 15 so we use 15. Therefore mesh y min = 15
# For mesh x max we do not ignore the x offset term because it is negative. It is also greater than 15. Therefore mesh x max = 280
# For mesh y max we ignore the y offset term because it is positive but it is less than 15 so we use 15. Therefore mesh y max = 285
# The final result would be mesh_min: 15, 15 mesh_max: 280, 285
mesh_min: 10, 10  # modify these according to the above guide. If the probe cannot reach then you will get a klipper error when trying to scan a bed mesh.
mesh_max: 215, 192 # modify these according to the above guide. If the probe cannot reach then you will get a klipper error when trying to scan a bed mesh.
probe_count: 30, 30
algorithm: bicubic
#scan_overshoot: 8  #uncomment this section if you still have room left over on the X axis for some scan overshoot to product smoother movements and more accurate scanning. Uncommenting this should be fine if you are using a standard voron mount.

# Uncomment this if you are using Eddy as the probe AND the homing endstop
[safe_z_home]
home_xy_position: 117.5, 117.5 # Choose an X,Y position that is in the center of your bed. For a 300x300 machine that will be 150, 150. Use the same principle to calculate your bed center.
z_hop: 10
z_hop_speed: 25
speed: 90

###############################Macros and related################################
#This secton contains macros and related config sections. Some should be used, others are optional. Read the comment above each one to find out whether or not to uncomment it for your installation.


# Uncomment this if you are using Eddy as the probe AND the homing endstop AND would like to use the beta z-offset control
#[save_variables]
#filename: ~/printer_data/config/variables.cfg



# Uncomment this if you are using Eddy as the probe AND the homing endstop
[force_move]
enable_force_move: True # Allows a user to move the z axis down if they have no other means of homing Z and need to calibrate the Eddy.



# Uncomment this if you are using Eddy as the probe AND the homing endstop AND would like to use the beta z-offset control
#[delayed_gcode RESTORE_PROBE_OFFSET]
#initial_duration: 1.
#gcode:
#  {% set svv = printer.save_variables.variables %}
#  {% if not printer["gcode_macro SET_GCODE_OFFSET"].restored %}
#    SET_GCODE_VARIABLE MACRO=SET_GCODE_OFFSET VARIABLE=runtime_offset VALUE={ svv.nvm_offset|default(0) }
#    SET_GCODE_VARIABLE MACRO=SET_GCODE_OFFSET VARIABLE=restored VALUE=True
#  {% endif %}



# Uncomment this if you are using Eddy as the probe AND the homing endstop
# Take note of the lines that should only be used if you have a KNOMI installed.
#[gcode_macro G28]
#rename_existing: G28.1
#gcode:
#  SET_GCODE_VARIABLE MACRO=_KNOMI_STATUS VARIABLE=homing VALUE=True # Uncomment this if using a KNOMI and then remove the G28 macro from the KNOMI.cfg
#  G28.1 {rawparams}
#  {% if not rawparams or (rawparams and 'Z' in rawparams) %}
#    PROBE
#    SET_Z_FROM_PROBE
#  {% endif %}
#  SET_GCODE_VARIABLE MACRO=_KNOMI_STATUS VARIABLE=homing VALUE=False # Uncomment this if using a KNOMI and then remove the G28 macro from the KNOMI.cfg



# Uncomment this if you are using Eddy as the probe AND the homing endstop
[gcode_macro SET_Z_FROM_PROBE]
gcode:
    {% set cf = printer.configfile.settings %}
    SET_GCODE_OFFSET_ORIG Z={printer.probe.last_z_result - cf['probe_eddy_current btt_eddy'].z_offset + printer["gcode_macro SET_GCODE_OFFSET"].runtime_offset}



# Uncomment this if you are using Eddy as the probe AND the homing endstop AND would like to use the beta z-offset control
#[gcode_macro Z_OFFSET_APPLY_PROBE]
#rename_existing: Z_OFFSET_APPLY_PROBE_ORIG
#gcode:
#  SAVE_VARIABLE VARIABLE=nvm_offset VALUE={ printer["gcode_macro SET_GCODE_OFFSET"].runtime_offset }



# Uncomment the lines in this macro if you are using Eddy as the probe AND the homing endstop AND would like to use the beta z-offset control
#[gcode_macro SET_GCODE_OFFSET]
#rename_existing: SET_GCODE_OFFSET_ORIG
#variable_restored: False  # Mark whether the var has been restored from NVM
#variable_runtime_offset: 0
#gcode:
#  {% if params.Z_ADJUST %}
#    SET_GCODE_VARIABLE MACRO=SET_GCODE_OFFSET VARIABLE=runtime_offset VALUE={ printer["gcode_macro SET_GCODE_OFFSET"].runtime_offset + params.Z_ADJUST|float }
#  {% endif %}
#  {% if params.Z %}
#    {% set paramList = rawparams.split() %}
#    {% for i in range(paramList|length) %}
#      {% if paramList[i]=="Z=0" %}
#        {% set temp=paramList.pop(i) %}
#        {% set temp="Z_ADJUST=" + (-printer["gcode_macro SET_GCODE_OFFSET"].runtime_offset)|string %}
#        {% if paramList.append(temp) %}{% endif %}
#      {% endif %}
#    {% endfor %}
#    {% set rawparams=paramList|join(' ') %}
#    SET_GCODE_VARIABLE MACRO=SET_GCODE_OFFSET VARIABLE=runtime_offset VALUE=0
#  {% endif %}
  SET_GCODE_OFFSET_ORIG { rawparams }



# This macro automates a lot of the frequency mapping process and simplifies the steps significantly.
[gcode_macro PROBE_EDDY_CURRENT_CALIBRATE_AUTO]
gcode:
  BED_MESH_CLEAR
  G28 X Y
  G1 X{ printer.toolhead.axis_maximum.x/2 } Y{ printer.toolhead.axis_maximum.y/2 } F6000
  {% if 'z' not in printer.toolhead.homed_axes %}
    SET_KINEMATIC_POSITION Z={ printer.toolhead.axis_maximum.z-1 } # Allows the user to work it down until it touches.
  {% endif %}
  PROBE_EDDY_CURRENT_CALIBRATE {rawparams}



#This macro is optional but useful if you want to run a rapid scan before each print. Simply uncomment it and add BED_MESH_SCAN to your print start code.
[gcode_macro BED_MESH_CALIBRATE]
rename_existing: BTT_BED_MESH_CALIBRATE
gcode:
  #SET_GCODE_VARIABLE MACRO=_KNOMI_STATUS VARIABLE=probing VALUE=True #Only uncomment this line if using a KNOMI and then remove the BED_MESH_CALIBRATE macro from KNOMI.cfg
  BTT_BED_MESH_CALIBRATE SCAN_MODE=rapid METHOD=scan
  #SET_GCODE_VARIABLE MACRO=_KNOMI_STATUS VARIABLE=probing VALUE=False #Only uncomment this line if using a KNOMI and then remove the BED_MESH_CALIBRATE macro from KNOMI.cfg
######################################################
######################################################

######################################################XYZ MOVEMENT

[include mainsail.cfg]

[stepper_x]
step_pin: P2.2
# dir_pin was flipped in default SKR 1.4 example
dir_pin: !P2.6
enable_pin: !P2.1
microsteps: 128
rotation_distance: 40
endstop_pin: !P1.29
# Negative x-min ensures x=0 is actually on the bed
position_endstop: -4
position_min: -4
position_max: 235
homing_speed: 50

[stepper_y]
step_pin: P0.19
dir_pin: P0.20
enable_pin: !P2.8
microsteps: 128
rotation_distance: 40
endstop_pin: !P1.28
position_endstop: 0
position_max: 230
homing_speed: 50

[stepper_z]
step_pin: P0.22
dir_pin: P2.11
enable_pin: !P0.21
microsteps: 128
rotation_distance: 8
#endstop_pin: !P1.27
endstop_pin: probe:z_virtual_endstop
#position_endstop: 0.0
position_max: 250

######################################################TESTING PLEASE DO NOT USE

[extruder] #BMG clone
step_pin: P2.13
dir_pin: P0.11
enable_pin: !P2.12
# If microsteps is changed, may need to re-tune rotation_distance and pressure_advance
microsteps: 16
rotation_distance: 32.682276
#rotation_distance: 22.172
#full_steps_per_rotation: 200
#gear_ratio: 50:17
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: P2.7
sensor_type: EPCOS 100K B57560G104F
sensor_pin: P0.24
control: pid
# Results of PID_CALIBRATE HEATER=extruder TARGET=200
pid_kp = 25.691
pid_ki = 1.223
pid_kd = 134.878
min_temp: 0
max_temp: 260
#pressure_advance: 0.3476

######################################################NEW BIGTREETECH BMG CLONE EXTRUDER CONFIG+SECOND EXTRUDER
#[extruder]
#step_pin: P2.13
#dir_pin: !P0.11
#enable_pin: !P2.12
# If microsteps is changed, may need to re-tune rotation_distance and pressure_advance
#microsteps: 16
#rotation_distance: 22.172
#full_steps_per_rotation: 200
#gear_ratio: 50:17
#nozzle_diameter: 0.400
#filament_diameter: 1.750
#heater_pin: P2.7
#sensor_type: EPCOS 100K B57560G104F
#sensor_pin: P0.24
#control: pid
# Results of PID_CALIBRATE HEATER=extruder TARGET=200
#pid_kp = 25.691
#pid_ki = 1.223
#pid_kd = 134.878
#min_temp: 0
#max_temp: 260
# Follow tuning guide in Klipper docs
#pressure_advance: 0.3476

#[extruder_stepper second_extruder]
#extruder: 
#step_pin = P1.15
#enable_pin = !P1.16
#microsteps: 16
#rotation_distance: 22.172
#full_steps_per_rotation: 200
#gear_ratio: 50:17

######################################################SENSORS ETC

[heater_bed]
heater_pin: P2.5
sensor_type: EPCOS 100K B57560G104F
sensor_pin: P0.25
control = pid
# Results of PID_CALIBRATE HEATER=heater_bed TARGET=55:
pid_kp = 70.876
pid_ki = 1.150
pid_kd = 1092.377
min_temp: 0
max_temp: 130

[fan]
pin: P2.3

[mcu] #REMEMBER TO LOOK UP YOUR OWN SERIAL USING
serial: /dev/serial/by-id/usb-Klipper_lpc1768_1900000DA1086EAF4F37DC5EC42000F5-if00


[printer]
kinematics: cartesian
max_velocity: 400
max_accel: 3500
max_z_velocity: 10
max_z_accel: 100

# Connect filament sensor to E0DET instead of touchscreen
[filament_switch_sensor filament_runout]
switch_pin: !P1.26 
pause_on_runout: True

#Can control with SET_LED LED=hotend RED=x.x GREEN=x.x BLUE=x.x (max value=1.0)
[neopixel hotend]
pin: P1.24
chain_count: 2
color_order: GRB
# Set to white
initial_RED: 1.0
initial_GREEN: 1.0
initial_BLUE: 1.0

# Results of manual resonance measuring
[input_shaper]
#shaper_freq_x: 38.76
#shaper_freq_y: 57.69
#shaper_type: mzv



######################################################
# TMC2208 configuration
# From TMC docs, max current=2A, so max RMS current~=1.4A
# Per Klipper docs, prefer not to set hold_current
######################################################

######################################################DRIVERS
[tmc2208 stepper_x]
uart_pin: P1.10
run_current: 0.600
stealthchop_threshold: 999999
#hold_current: 0.720

[tmc2208 stepper_y]
uart_pin: P1.9
run_current: 0.600
stealthchop_threshold: 999999
#hold_current: 0.720

[tmc2208 stepper_z]
uart_pin: P1.8
run_current: 0.600
#hold_current: 0.720
stealthchop_threshold: 999999

[tmc2208 extruder]
uart_pin: P1.4
run_current: 0.6
#hold_current: 0.720
stealthchop_threshold: 999999

#[tmc2208 second_extruder]
#uart_pin: P1.1
#run_current: 0.600
#stealthchop_threshold: 999999



######################################################
# EXP1 / EXP2 (display) pins
# Unused currently, TODO setting up touch screen
######################################################

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=P1.30, EXP1_3=P1.18, EXP1_5=P1.20, EXP1_7=P1.22, EXP1_9=<GND>,
    EXP1_2=P0.28, EXP1_4=P1.19, EXP1_6=P1.21, EXP1_8=P1.23, EXP1_10=<5V>,
    # EXP2 header
    EXP2_1=P0.17, EXP2_3=P3.26, EXP2_5=P3.25, EXP2_7=P1.31, EXP2_9=<GND>,
    EXP2_2=P0.15, EXP2_4=P0.16, EXP2_6=P0.18, EXP2_8=<RST>, EXP2_10=<NC>
    # Pins EXP2_1, EXP2_6, EXP2_2 are also MISO, MOSI, SCK of bus "ssp0"

# See the sample-lcd.cfg file for definitions of common LCD displays.

######################################################MACROS
#make sure to add the coresponding start/end gcodes from here: https://github.com/rootiest/zippy_guides/blob/main/guides/macros.md#end-g-code-for-all-slicers

[gcode_macro START_PRINT]
gcode:
    {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}
    # Start bed heating (but don't wait for it)
    M140 S{BED_TEMP}
    # Use absolute coordinates
    G90
    # Home the printer
    G28
    # Move the nozzle near the bed
    G1 Z5 F3000
    # Move the nozzle very close to the bed
    G1 Z0.15 F300
    G28 X Y
    # Wait for bed to reach temperature
    M190 S{BED_TEMP}
    BED_MESH_CALIBRATE
    G28 X Y
     # Reset the G-Code Z offset (adjust Z offset if needed)
    SET_GCODE_OFFSET Z=-0.06
    # Set and wait for nozzle to reach temperature
    M109 S{EXTRUDER_TEMP}
    G92 E0                           ; Reset Extruder
    G1 Z2.0 F3000                    ; Move Z Axis up little to prevent scratching of Heat Bed
    G1 X4.1 Y20 Z0.3 F5000.0         ; Move to start position
    G1 X4.1 Y200.0 Z0.3 F1500.0 E15  ; Draw the first line
    G1 X4.4 Y200.0 Z0.3 F5000.0      ; Move to side a little
    G1 X4.4 Y20 Z0.3 F1500.0 E30     ; Draw the second line
    G92 E0                           ; Reset Extruder
    G1 Z2.0 F3000                    ; Move Z Axis up little to prevent scratching of Heat Bed
    G1 X5 Y20 Z0.3 F5000.0           ; Move over to prevent blob squish

[gcode_macro END_PRINT]
gcode:
    G91                            ;Relative positioning
    G1 E-2 F2700                   ;Retract a bit
    G1 E-2 Z0.2 F2400              ;Retract a bit more and raise Z
    G1 X5 Y5 F3000                 ;Wipe out
    G1 Z10                         ;Raise Z by 10mm
    G90                            ;Return to absolute positioning
    M106 S0                        ;Turn-off fan
    M104 S0                        ;Turn-off hotend
    M140 S0                        ;Turn-off bed
    G28 X                          ;moves print head to the side

    M84 X Y E                      ;Disable all steppers but Z

######################################################MACROS FOR DUAL EXTRUDERS (2 IN 1 OUT)

#[gcode_macro T0]
#gcode:
    # Deactivate stepper in my_extruder_stepper
#    SYNC_EXTRUDER_MOTION EXTRUDER=second_extruder MOTION_QUEUE=
    # Activate stepper in extruder
#   SYNC_EXTRUDER_MOTION EXTRUDER=extruder MOTION_QUEUE=extruder

#[gcode_macro T1]
#gcode:
#    SYNC_EXTRUDER_MOTION EXTRUDER=extruder MOTION_QUEUE=
#    # Activate stepper in my_extruder_stepper
#    SYNC_EXTRUDER_MOTION EXTRUDER=second_extruder MOTION_QUEUE=extruder

#[gcode_macro ACTIVATE_EXTRUDER]
#description: Replaces built-in macro for a X-in, 1-out extruder configuration SuperSlicer fix
#rename_existing: ACTIVATE_EXTRUDER_BASE
#gcode:
#    {% if 'EXTRUDER' in params %}
#      {% set ext = params.EXTRUDER|default(EXTRUDER) %}
#      {% if ext == "extruder"%}
#        {action_respond_info("Switching to extruder.")}
#        T0
#      {% elif ext == "second_extruder" %}
#        {action_respond_info("Switching to second_extruder.")}
#        T1
#      {% else %}
#        {action_respond_info("EXTRUDER value being passed.")}
#        ACTIVATE_EXTRUDER_BASE EXTRUDER={ext}
#      {% endif %}
#    {% endif %}


#[delayed_gcode activate_default_extruder]
#initial_duration: 1
#gcode:
#    ACTIVATE_EXTRUDER EXTRUDER=extruder

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [probe_eddy_current btt_eddy]
#*# reg_drive_current = 15
#*# calibrate =
#*# 	0.050000:3282253.017,0.100000:3280998.431,0.150000:3279712.151,
#*# 	0.200000:3278193.480,0.250000:3276740.606,0.300000:3275488.410,
#*# 	0.350000:3274075.276,0.400000:3272598.831,0.450000:3271266.513,
#*# 	0.500000:3269924.208,0.550000:3268567.083,0.600000:3267280.721,
#*# 	0.650000:3265958.712,0.700000:3264662.885,0.750000:3263444.356,
#*# 	0.800000:3262248.328,0.850000:3260994.346,0.900000:3259855.103,
#*# 	0.950000:3258706.119,1.000000:3257542.463,1.050000:3256419.886,
#*# 	1.100000:3255344.012,1.150000:3254257.969,1.200000:3253093.371,
#*# 	1.250000:3252069.957,1.300000:3251060.962,1.350000:3249987.549,
#*# 	1.400000:3249069.937,1.450000:3248077.954,1.500000:3247096.953,
#*# 	1.550000:3246256.295,1.600000:3245369.649,1.650000:3244511.927,
#*# 	1.700000:3243654.510,1.750000:3242779.427,1.800000:3241969.197,
#*# 	1.850000:3241136.412,1.900000:3240359.775,1.950000:3239618.239,
#*# 	2.000000:3238860.109,2.050000:3238181.562,2.100000:3237489.741,
#*# 	2.150000:3236745.698,2.200000:3236120.395,2.250000:3235470.352,
#*# 	2.300000:3234800.300,2.350000:3234228.010,2.400000:3233602.790,
#*# 	2.450000:3232992.024,2.500000:3232377.936,2.550000:3231797.042,
#*# 	2.600000:3231198.093,2.650000:3230634.464,2.700000:3230057.179,
#*# 	2.750000:3229514.104,2.800000:3228915.702,2.850000:3228391.594,
#*# 	2.900000:3227870.412,2.950000:3227311.922,3.000000:3226817.823,
#*# 	3.050000:3226320.849,3.100000:3225785.490,3.150000:3225314.826,
#*# 	3.200000:3224853.441,3.250000:3224355.276,3.300000:3223920.658,
#*# 	3.350000:3223491.738,3.400000:3223050.082,3.450000:3222631.259,
#*# 	3.500000:3222239.807,3.550000:3221802.968,3.600000:3221373.671,
#*# 	3.650000:3220984.852,3.700000:3220624.608,3.750000:3220245.201,
#*# 	3.800000:3219877.233,3.850000:3219557.647,3.900000:3219155.146,
#*# 	3.950000:3218858.833,4.000000:3218533.977,4.050000:3218208.066
#*# calibration_temp = 34.621765
#*# drift_calibration =
#*# 	3286664.190579, -805.978500, 5.530535
#*# 	3273526.467205, -665.405350, 4.367312
#*# 	3262386.618408, -597.125167, 3.790695
#*# 	3251446.225265, -481.518382, 2.847726
#*# 	3241689.109805, -348.713486, 1.754938
#*# 	3233596.515391, -248.529918, 0.968536
#*# 	3227646.224803, -195.803978, 0.620713
#*# 	3222263.574537, -126.503668, 0.057636
#*# 	3218033.794269, -76.012572, -0.321177
#*# drift_calibration_min_temp = 32.320840670162
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  -0.034573, 0.066699, 0.056549, 0.066312, 0.093909, 0.122868, 0.122708, 0.121033, 0.134867, 0.160544, 0.186015, 0.185460, 0.170581, 0.150433, 0.121353, 0.136389, 0.149836, 0.138739, 0.104332, 0.075840, 0.063867, 0.067654, 0.072925, 0.033588, -0.027862, -0.047151, -0.054052, -0.045313, -0.024613, -0.040668
#*# 	  0.047384, 0.035644, 0.033751, 0.054901, 0.075637, 0.103029, 0.113463, 0.099163, 0.101822, 0.127814, 0.167581, 0.177237, 0.175677, 0.152830, 0.127115, 0.144033, 0.158539, 0.158651, 0.138841, 0.113260, 0.116164, 0.130903, 0.151340, 0.146660, 0.106094, 0.079344, 0.083806, 0.104559, 0.105903, 0.013193
#*# 	  0.044033, 0.144062, 0.137910, 0.144267, 0.160590, 0.192283, 0.180696, 0.164370, 0.147288, 0.166907, 0.187622, 0.191826, 0.175909, 0.148081, 0.126678, 0.141216, 0.151211, 0.144471, 0.107214, 0.082549, 0.074129, 0.077744, 0.084973, 0.071410, 0.024619, 0.010949, 0.000843, 0.015771, 0.016134, 0.004550
#*# 	  0.031569, 0.024706, 0.031102, 0.052882, 0.072937, 0.104842, 0.099913, 0.099984, 0.105637, 0.134429, 0.172243, 0.186122, 0.173301, 0.153154, 0.134109, 0.147981, 0.168821, 0.164719, 0.134952, 0.118721, 0.122878, 0.133485, 0.160869, 0.151555, 0.109230, 0.095297, 0.089152, 0.108707, 0.107479, 0.016573
#*# 	  0.030474, 0.140378, 0.126929, 0.136992, 0.154241, 0.188973, 0.185953, 0.165294, 0.146671, 0.170062, 0.192642, 0.193628, 0.179309, 0.155521, 0.131458, 0.148830, 0.159520, 0.148170, 0.124444, 0.095074, 0.086965, 0.091619, 0.084055, 0.075408, 0.032274, 0.010208, 0.002022, 0.016503, 0.019378, 0.004048
#*# 	  0.018234, 0.015406, 0.019232, 0.033296, 0.067338, 0.102946, 0.102008, 0.105555, 0.112653, 0.132447, 0.174450, 0.190766, 0.173681, 0.153312, 0.142224, 0.150465, 0.166683, 0.167502, 0.144258, 0.126364, 0.118796, 0.130123, 0.152781, 0.153657, 0.104998, 0.093971, 0.088822, 0.105142, 0.104020, 0.009616
#*# 	  0.020136, 0.136140, 0.132497, 0.140033, 0.170148, 0.196217, 0.194048, 0.170743, 0.158644, 0.179493, 0.195012, 0.197904, 0.181910, 0.158315, 0.135947, 0.156765, 0.159290, 0.155529, 0.124470, 0.099344, 0.091630, 0.084798, 0.082588, 0.062866, 0.023070, 0.008959, 0.011559, -0.000793, 0.010630, -0.004607
#*# 	  0.017482, 0.024347, 0.030261, 0.055208, 0.078274, 0.107447, 0.106783, 0.111500, 0.112203, 0.149335, 0.174948, 0.182594, 0.180081, 0.159260, 0.136429, 0.155917, 0.173553, 0.171393, 0.138307, 0.123926, 0.120796, 0.137937, 0.155606, 0.146213, 0.107203, 0.089257, 0.090058, 0.101022, 0.091593, 0.002105
#*# 	  0.030375, 0.146921, 0.139017, 0.153364, 0.176551, 0.204368, 0.203207, 0.182014, 0.162030, 0.178448, 0.204239, 0.204879, 0.184302, 0.167488, 0.145390, 0.154528, 0.162997, 0.158488, 0.129054, 0.107439, 0.100189, 0.097350, 0.085838, 0.074196, 0.029856, 0.009450, 0.006772, 0.002324, 0.008608, -0.019991
#*# 	  0.016368, 0.023375, 0.017271, 0.047915, 0.079519, 0.108726, 0.116187, 0.113765, 0.119639, 0.151180, 0.184135, 0.197632, 0.178499, 0.160955, 0.139847, 0.156638, 0.176150, 0.171235, 0.145300, 0.123494, 0.128460, 0.147072, 0.156525, 0.146662, 0.110383, 0.091089, 0.084552, 0.099036, 0.086768, -0.016992
#*# 	  0.012942, 0.143481, 0.129906, 0.140599, 0.174110, 0.201412, 0.199876, 0.175506, 0.160614, 0.178740, 0.208783, 0.203704, 0.184216, 0.155814, 0.136192, 0.150438, 0.165422, 0.155331, 0.119933, 0.101123, 0.098192, 0.094417, 0.091603, 0.061634, 0.022574, 0.003908, 0.002338, -0.002137, -0.006048, -0.021145
#*# 	  0.013749, 0.020845, 0.024155, 0.039149, 0.083154, 0.113013, 0.117579, 0.119852, 0.119152, 0.152109, 0.183927, 0.204149, 0.178549, 0.163164, 0.140153, 0.151978, 0.168818, 0.175511, 0.147610, 0.126728, 0.124311, 0.146694, 0.154304, 0.151432, 0.116970, 0.087896, 0.080793, 0.091364, 0.090902, -0.018861
#*# 	  0.021779, 0.148379, 0.134571, 0.146278, 0.177319, 0.195552, 0.201573, 0.174047, 0.164554, 0.178324, 0.211782, 0.210517, 0.184283, 0.156524, 0.145531, 0.155076, 0.166021, 0.161331, 0.133084, 0.102742, 0.098911, 0.093377, 0.082081, 0.070909, 0.021089, 0.002207, -0.001869, -0.002504, -0.004693, -0.021290
#*# 	  0.015501, 0.031597, 0.026897, 0.047857, 0.085707, 0.109522, 0.118228, 0.123298, 0.123675, 0.154686, 0.192484, 0.201561, 0.184212, 0.163009, 0.154236, 0.167432, 0.179245, 0.179652, 0.150178, 0.131068, 0.133164, 0.149550, 0.151386, 0.151116, 0.113888, 0.090456, 0.090183, 0.096673, 0.089467, -0.015545
#*# 	  0.020641, 0.153024, 0.139931, 0.147707, 0.181473, 0.202996, 0.203999, 0.184850, 0.169871, 0.186859, 0.209757, 0.212440, 0.190864, 0.172304, 0.161035, 0.161847, 0.172709, 0.170893, 0.139613, 0.112821, 0.107149, 0.107915, 0.091817, 0.078364, 0.043824, 0.008450, 0.005921, 0.004855, 0.012634, -0.017084
#*# 	  0.027888, 0.045857, 0.032289, 0.048072, 0.088669, 0.112585, 0.126247, 0.127484, 0.127266, 0.156732, 0.192330, 0.209874, 0.182330, 0.171670, 0.162571, 0.173081, 0.186811, 0.180822, 0.151445, 0.135339, 0.130052, 0.147132, 0.153994, 0.150729, 0.119722, 0.085001, 0.089399, 0.095507, 0.090560, -0.018813
#*# 	  0.039849, 0.162609, 0.150748, 0.155106, 0.182638, 0.209395, 0.203805, 0.178893, 0.170198, 0.184025, 0.213354, 0.212963, 0.190415, 0.175471, 0.154260, 0.158276, 0.170464, 0.162955, 0.138554, 0.112981, 0.094824, 0.099728, 0.088318, 0.078665, 0.033089, 0.006185, -0.003492, -0.008543, 0.000043, -0.029984
#*# 	  0.022789, 0.043413, 0.029903, 0.041712, 0.082976, 0.106628, 0.117177, 0.112933, 0.116766, 0.153198, 0.180969, 0.204786, 0.183536, 0.170812, 0.148815, 0.157340, 0.176041, 0.172374, 0.146066, 0.127336, 0.117694, 0.139363, 0.147119, 0.136272, 0.106574, 0.080410, 0.075896, 0.077588, 0.076000, -0.035437
#*# 	  0.033202, 0.162276, 0.139877, 0.149734, 0.186062, 0.200961, 0.203392, 0.169816, 0.160161, 0.181279, 0.203358, 0.205375, 0.181835, 0.164181, 0.143475, 0.159059, 0.166114, 0.149028, 0.126246, 0.090297, 0.084342, 0.081211, 0.071598, 0.050182, 0.015697, -0.008059, -0.015147, -0.022652, -0.018811, -0.056309
#*# 	  0.014366, 0.043463, 0.027844, 0.040826, 0.078115, 0.105660, 0.117385, 0.112759, 0.118073, 0.139808, 0.179209, 0.200283, 0.180703, 0.170195, 0.146592, 0.153670, 0.167279, 0.170400, 0.148630, 0.123074, 0.114195, 0.134180, 0.131840, 0.140133, 0.107716, 0.068367, 0.062896, 0.072145, 0.065145, -0.050342
#*# 	  0.019177, 0.157428, 0.133466, 0.147155, 0.178774, 0.204297, 0.192822, 0.174695, 0.159333, 0.167405, 0.193090, 0.204738, 0.179870, 0.155773, 0.139143, 0.144169, 0.148424, 0.150838, 0.124133, 0.100184, 0.079780, 0.074089, 0.064938, 0.046295, 0.015095, -0.015770, -0.028926, -0.029053, -0.027802, -0.062971
#*# 	  0.008819, 0.034619, 0.027807, 0.047972, 0.076871, 0.097232, 0.115952, 0.108293, 0.116959, 0.149067, 0.178246, 0.199440, 0.173680, 0.156062, 0.136324, 0.147086, 0.162143, 0.160136, 0.139063, 0.118628, 0.108201, 0.124381, 0.135595, 0.122327, 0.090480, 0.057004, 0.053588, 0.066126, 0.058355, -0.056819
#*# 	  0.025072, 0.164224, 0.139734, 0.153733, 0.184185, 0.197363, 0.200351, 0.181087, 0.163670, 0.177163, 0.198256, 0.206100, 0.180075, 0.153022, 0.142590, 0.142738, 0.149140, 0.146539, 0.117477, 0.090463, 0.068127, 0.075125, 0.062210, 0.038029, 0.006029, -0.030370, -0.034536, -0.039481, -0.025805, -0.069086
#*# 	  0.035222, 0.061356, 0.043065, 0.056557, 0.096155, 0.122708, 0.125714, 0.129166, 0.131701, 0.158354, 0.189637, 0.212400, 0.176801, 0.160644, 0.148814, 0.156870, 0.170284, 0.167920, 0.142980, 0.119234, 0.111827, 0.132905, 0.136896, 0.131242, 0.096613, 0.058102, 0.058151, 0.065165, 0.060192, -0.059066
#*# 	  0.053625, 0.190760, 0.170786, 0.175416, 0.206621, 0.226773, 0.225967, 0.194618, 0.183598, 0.196417, 0.222117, 0.220157, 0.198958, 0.168717, 0.161430, 0.160269, 0.170733, 0.164392, 0.133185, 0.100470, 0.089924, 0.087638, 0.073356, 0.055760, 0.012871, -0.014340, -0.024611, -0.024502, -0.019247, -0.063715
#*# 	  0.045273, 0.081595, 0.069062, 0.080236, 0.122923, 0.144437, 0.152116, 0.147909, 0.155185, 0.179266, 0.212891, 0.222727, 0.195559, 0.177527, 0.164526, 0.169011, 0.190203, 0.185709, 0.157145, 0.133025, 0.126373, 0.146933, 0.151172, 0.140091, 0.109571, 0.070669, 0.069792, 0.075496, 0.065849, -0.049135
#*# 	  0.072015, 0.209010, 0.191015, 0.187498, 0.221873, 0.245470, 0.243855, 0.220887, 0.209056, 0.207403, 0.241549, 0.244082, 0.212329, 0.190006, 0.171720, 0.173473, 0.180817, 0.183981, 0.149320, 0.114615, 0.099553, 0.107287, 0.084367, 0.070388, 0.035073, -0.003442, -0.009796, -0.016687, -0.011712, -0.063985
#*# 	  0.065479, 0.100860, 0.088334, 0.109128, 0.140407, 0.161551, 0.169644, 0.170147, 0.169851, 0.188605, 0.221367, 0.234163, 0.206506, 0.183579, 0.176138, 0.185185, 0.194640, 0.185198, 0.160725, 0.137658, 0.131294, 0.152905, 0.151755, 0.133329, 0.106801, 0.070711, 0.078337, 0.072236, 0.064749, -0.047630
#*# 	  0.080374, 0.221055, 0.191596, 0.203560, 0.233400, 0.253279, 0.250462, 0.219860, 0.207658, 0.214979, 0.236628, 0.239657, 0.207062, 0.181218, 0.169122, 0.168513, 0.181792, 0.160960, 0.135988, 0.102945, 0.090624, 0.091269, 0.077666, 0.052598, 0.016041, -0.017062, -0.023446, -0.031163, -0.027901, -0.071284
#*# 	  0.064265, 0.099369, 0.083669, 0.100443, 0.133099, 0.151561, 0.152320, 0.156767, 0.159250, 0.172613, 0.206602, 0.224105, 0.195654, 0.176237, 0.157389, 0.161844, 0.174527, 0.173644, 0.147747, 0.116033, 0.107431, 0.125208, 0.132154, 0.122792, 0.094777, 0.059193, 0.045064, 0.049496, 0.053625, -0.075727
#*# x_count = 30
#*# y_count = 30
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 10.0
#*# max_x = 214.74
#*# min_y = 10.0
#*# max_y = 191.83
